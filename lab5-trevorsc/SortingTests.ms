import SortingNetworks;

module SortingTests;

    Integer numTests = 12;

    Vector#(numTests, Vector#(8, Word)) tests = replicate(newVector);
    Vector#(numTests, Vector#(8, Word)) res = replicate(newVector);

    tests[0][0] = 11;
    tests[0][1] = 15;
    tests[0][2] = 1;
    tests[0][3] = 29;
    tests[0][4] = 13;
    tests[0][5] = 28;
    tests[0][6] = 18;
    tests[0][7] = 29;

    res[0][0] = 1;
    res[0][1] = 11;
    res[0][2] = 13;
    res[0][3] = 15;
    res[0][4] = 18;
    res[0][5] = 28;
    res[0][6] = 29;
    res[0][7] = 29;

    //--------------------//
    tests[1][0] = 21;
    tests[1][1] = 18;
    tests[1][2] = 14;
    tests[1][3] = 8;
    tests[1][4] = 31;
    tests[1][5] = 24;
    tests[1][6] = 19;
    tests[1][7] = 26;

    res[1][0] = 8;
    res[1][1] = 14;
    res[1][2] = 18;
    res[1][3] = 19;
    res[1][4] = 21;
    res[1][5] = 24;
    res[1][6] = 26;
    res[1][7] = 31;

    //--------------------//
    tests[2][0] = 2;
    tests[2][1] = 4;
    tests[2][2] = 10;
    tests[2][3] = 13;
    tests[2][4] = 12;
    tests[2][5] = 28;
    tests[2][6] = 4;
    tests[2][7] = 31;

    res[2][0] = 2;
    res[2][1] = 4;
    res[2][2] = 4;
    res[2][3] = 10;
    res[2][4] = 12;
    res[2][5] = 13;
    res[2][6] = 28;
    res[2][7] = 31;

    //--------------------//
    tests[3][0] = 9;
    tests[3][1] = 13;
    tests[3][2] = 21;
    tests[3][3] = 19;
    tests[3][4] = 14;
    tests[3][5] = 24;
    tests[3][6] = 19;
    tests[3][7] = 28;

    res[3][0] = 9;
    res[3][1] = 13;
    res[3][2] = 14;
    res[3][3] = 19;
    res[3][4] = 19;
    res[3][5] = 21;
    res[3][6] = 24;
    res[3][7] = 28;

    //--------------------//
    tests[4][0] = 29;
    tests[4][1] = 14;
    tests[4][2] = 19;
    tests[4][3] = 10;
    tests[4][4] = 8;
    tests[4][5] = 26;
    tests[4][6] = 9;
    tests[4][7] = 12;

    res[4][0] = 8;
    res[4][1] = 9;
    res[4][2] = 10;
    res[4][3] = 12;
    res[4][4] = 14;
    res[4][5] = 19;
    res[4][6] = 26;
    res[4][7] = 29;

    //--------------------//
    tests[5][0] = 3164;
    tests[5][1] = 2216;
    tests[5][2] = 1438;
    tests[5][3] = 3458;
    tests[5][4] = 3779;
    tests[5][5] = 2734;
    tests[5][6] = 2879;
    tests[5][7] = 3262;

    res[5][0] = 1438;
    res[5][1] = 2216;
    res[5][2] = 2734;
    res[5][3] = 2879;
    res[5][4] = 3164;
    res[5][5] = 3262;
    res[5][6] = 3458;
    res[5][7] = 3779;

    //--------------------//
    tests[6][0] = 11802;
    tests[6][1] = 8026;
    tests[6][2] = 4211;
    tests[6][3] = 4219;
    tests[6][4] = 12113;
    tests[6][5] = 3346;
    tests[6][6] = 2090;
    tests[6][7] = 13986;

    res[6][0] = 2090;
    res[6][1] = 3346;
    res[6][2] = 4211;
    res[6][3] = 4219;
    res[6][4] = 8026;
    res[6][5] = 11802;
    res[6][6] = 12113;
    res[6][7] = 13986;

    //--------------------//
    tests[7][0] = 32056;
    tests[7][1] = 56272;
    tests[7][2] = 44099;
    tests[7][3] = 35088;
    tests[7][4] = 8906;
    tests[7][5] = 12922;
    tests[7][6] = 10913;
    tests[7][7] = 31598;

    res[7][0] = 8906;
    res[7][1] = 10913;
    res[7][2] = 12922;
    res[7][3] = 31598;
    res[7][4] = 32056;
    res[7][5] = 35088;
    res[7][6] = 44099;
    res[7][7] = 56272;

    //--------------------//
    tests[8][0] = 3314930064;
    tests[8][1] = 1376594209;
    tests[8][2] = 2916033939;
    tests[8][3] = 386154263;
    tests[8][4] = 1161429423;
    tests[8][5] = 557918461;
    tests[8][6] = 2155419318;
    tests[8][7] = 1017113164;

    res[8][0] = 386154263;
    res[8][1] = 557918461;
    res[8][2] = 1017113164;
    res[8][3] = 1161429423;
    res[8][4] = 1376594209;
    res[8][5] = 2155419318;
    res[8][6] = 2916033939;
    res[8][7] = 3314930064;

    //--------------------//
    tests[9][0] = 1428607241;
    tests[9][1] = 3778492633;
    tests[9][2] = 4007155732;
    tests[9][3] = 2372784860;
    tests[9][4] = 2801178179;
    tests[9][5] = 3552208774;
    tests[9][6] = 1618269893;
    tests[9][7] = 3904079505;

    res[9][0] = 1428607241;
    res[9][1] = 1618269893;
    res[9][2] = 2372784860;
    res[9][3] = 2801178179;
    res[9][4] = 3552208774;
    res[9][5] = 3778492633;
    res[9][6] = 3904079505;
    res[9][7] = 4007155732;

    //--------------------//
    tests[10][0] = 1992094133;
    tests[10][1] = 3572403825;
    tests[10][2] = 3091770045;
    tests[10][3] = 2461587775;
    tests[10][4] = 389520885;
    tests[10][5] = 426346020;
    tests[10][6] = 1335126106;
    tests[10][7] = 4095510780;

    res[10][0] = 389520885;
    res[10][1] = 426346020;
    res[10][2] = 1335126106;
    res[10][3] = 1992094133;
    res[10][4] = 2461587775;
    res[10][5] = 3091770045;
    res[10][6] = 3572403825;
    res[10][7] = 4095510780;

    //--------------------//
    tests[11][0] = 4096284001;
    tests[11][1] = 3874922051;
    tests[11][2] = 1113819735;
    tests[11][3] = 3310403758;
    tests[11][4] = 3576649537;
    tests[11][5] = 2903934735;
    tests[11][6] = 2495504572;
    tests[11][7] = 104148123;

    res[11][0] = 104148123;
    res[11][1] = 1113819735;
    res[11][2] = 2495504572;
    res[11][3] = 2903934735;
    res[11][4] = 3310403758;
    res[11][5] = 3576649537;
    res[11][6] = 3874922051;
    res[11][7] = 4096284001;

    //--------------------//
    tests[0][0] = 11;
    tests[0][1] = 15;
    tests[0][2] = 1;
    tests[0][3] = 29;
    tests[0][4] = 13;
    tests[0][5] = 28;
    tests[0][6] = 18;
    tests[0][7] = 29;

    res[0][0] = 1;
    res[0][1] = 11;
    res[0][2] = 13;
    res[0][3] = 15;
    res[0][4] = 18;
    res[0][5] = 28;
    res[0][6] = 29;
    res[0][7] = 29;

    //--------------------//
    tests[1][0] = 21;
    tests[1][1] = 18;
    tests[1][2] = 14;
    tests[1][3] = 8;
    tests[1][4] = 31;
    tests[1][5] = 24;
    tests[1][6] = 19;
    tests[1][7] = 26;

    res[1][0] = 8;
    res[1][1] = 14;
    res[1][2] = 18;
    res[1][3] = 19;
    res[1][4] = 21;
    res[1][5] = 24;
    res[1][6] = 26;
    res[1][7] = 31;

    //--------------------//
    tests[2][0] = 2;
    tests[2][1] = 4;
    tests[2][2] = 10;
    tests[2][3] = 13;
    tests[2][4] = 12;
    tests[2][5] = 28;
    tests[2][6] = 4;
    tests[2][7] = 31;

    res[2][0] = 2;
    res[2][1] = 4;
    res[2][2] = 4;
    res[2][3] = 10;
    res[2][4] = 12;
    res[2][5] = 13;
    res[2][6] = 28;
    res[2][7] = 31;

    //--------------------//
    tests[3][0] = 9;
    tests[3][1] = 13;
    tests[3][2] = 21;
    tests[3][3] = 19;
    tests[3][4] = 14;
    tests[3][5] = 24;
    tests[3][6] = 19;
    tests[3][7] = 28;

    res[3][0] = 9;
    res[3][1] = 13;
    res[3][2] = 14;
    res[3][3] = 19;
    res[3][4] = 19;
    res[3][5] = 21;
    res[3][6] = 24;
    res[3][7] = 28;

    //--------------------//
    tests[4][0] = 29;
    tests[4][1] = 14;
    tests[4][2] = 19;
    tests[4][3] = 10;
    tests[4][4] = 8;
    tests[4][5] = 26;
    tests[4][6] = 9;
    tests[4][7] = 12;

    res[4][0] = 8;
    res[4][1] = 9;
    res[4][2] = 10;
    res[4][3] = 12;
    res[4][4] = 14;
    res[4][5] = 19;
    res[4][6] = 26;
    res[4][7] = 29;

    //--------------------//
    tests[5][0] = 3164;
    tests[5][1] = 2216;
    tests[5][2] = 1438;
    tests[5][3] = 3458;
    tests[5][4] = 3779;
    tests[5][5] = 2734;
    tests[5][6] = 2879;
    tests[5][7] = 3262;

    res[5][0] = 1438;
    res[5][1] = 2216;
    res[5][2] = 2734;
    res[5][3] = 2879;
    res[5][4] = 3164;
    res[5][5] = 3262;
    res[5][6] = 3458;
    res[5][7] = 3779;

    //--------------------//
    tests[6][0] = 11802;
    tests[6][1] = 8026;
    tests[6][2] = 4211;
    tests[6][3] = 4219;
    tests[6][4] = 12113;
    tests[6][5] = 3346;
    tests[6][6] = 2090;
    tests[6][7] = 13986;

    res[6][0] = 2090;
    res[6][1] = 3346;
    res[6][2] = 4211;
    res[6][3] = 4219;
    res[6][4] = 8026;
    res[6][5] = 11802;
    res[6][6] = 12113;
    res[6][7] = 13986;

    //--------------------//

    // tests[7] = Invalid;
    // res[7] = Invalid;

    //--------------------//
    tests[8][0] = 3314930064;
    tests[8][1] = 1376594209;
    tests[8][2] = 2916033939;
    tests[8][3] = 386154263;
    tests[8][4] = 1161429423;
    tests[8][5] = 557918461;
    tests[8][6] = 2155419318;
    tests[8][7] = 1017113164;

    res[8][0] = 386154263;
    res[8][1] = 557918461;
    res[8][2] = 1017113164;
    res[8][3] = 1161429423;
    res[8][4] = 1376594209;
    res[8][5] = 2155419318;
    res[8][6] = 2916033939;
    res[8][7] = 3314930064;

    //--------------------//
    tests[9][0] = 1428607241;
    tests[9][1] = 3778492633;
    tests[9][2] = 4007155732;
    tests[9][3] = 2372784860;
    tests[9][4] = 2801178179;
    tests[9][5] = 3552208774;
    tests[9][6] = 1618269893;
    tests[9][7] = 3904079505;

    res[9][0] = 1428607241;
    res[9][1] = 1618269893;
    res[9][2] = 2372784860;
    res[9][3] = 2801178179;
    res[9][4] = 3552208774;
    res[9][5] = 3778492633;
    res[9][6] = 3904079505;
    res[9][7] = 4007155732;

    //--------------------//

    // tests[10] = Invalid;
    // res[10] = Invalid;

    //--------------------//
    tests[11][0] = 4096284001;
    tests[11][1] = 3874922051;
    tests[11][2] = 1113819735;
    tests[11][3] = 3310403758;
    tests[11][4] = 3576649537;
    tests[11][5] = 2903934735;
    tests[11][6] = 2495504572;
    tests[11][7] = 104148123;

    res[11][0] = 104148123;
    res[11][1] = 1113819735;
    res[11][2] = 2495504572;
    res[11][3] = 2903934735;
    res[11][4] = 3310403758;
    res[11][5] = 3576649537;
    res[11][6] = 3874922051;
    res[11][7] = 4096284001;

    //--------------------//

    method Maybe#(Vector#(8, Word)) getTest(Bit#(5) num) = (num >= numTests || num == 7 || num == 10)? Invalid: Valid(tests[num]);
    method Maybe#(Vector#(8, Word)) getRes(Bit#(5) num)  = (num >= numTests || num == 7 || num == 10)? Invalid: Valid(res[num]);
endmodule
